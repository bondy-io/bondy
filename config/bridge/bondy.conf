
## =============================================================================
## ADMIN HTTP/S API
## =============================================================================

admin_api.http.acceptors_pool_size = 100
admin_api.http.backlog = 1024
admin_api.http.enabled = on
admin_api.http.keepalive = off
admin_api.http.max_connections = 10000
admin_api.http.nodelay = on
admin_api.https.acceptors_pool_size = 50
admin_api.https.enabled = off
admin_api.https.keepalive = off
admin_api.https.max_connections = 25000

## =============================================================================
## API GATEWAY
## =============================================================================

# api_gateway.config_file = $(platform_etc_dir)/api_gateway_config.json
api_gateway.http.acceptors_pool_size = 200
api_gateway.http.backlog = 4096
api_gateway.http.keepalive = off
api_gateway.http.max_connections = 300000
api_gateway.http.nodelay = on
api_gateway.https.acceptors_pool_size = 200
api_gateway.https.backlog = 4096
api_gateway.https.keepalive = off
api_gateway.https.max_connections = 300000
api_gateway.https.nodelay = on

## =============================================================================
## SECURITY
## =============================================================================

security.allow_anonymous_user = on
security.automatically_create_realms = off
security.config_file = $(platform_etc_dir)/security_config.json
password.protocol = cra
security.password.min_length = 6
security.password.max_length = 254
security.ticket.expiry_time = 15d
security.ticket.max_expiry_time = 30d

## =============================================================================
## OAUTH2
## =============================================================================

## oauth2.config_file = $(platform_etc_dir)/oauth2_config.json
oauth2.client_credentials_grant.duration = 15m
oauth2.code_grant.duration = 10m
oauth2.password_grant.duration = 15m
oauth2.refresh_token.duration = 30d
oauth2.refresh_token.length = 40

## =============================================================================
## WAMP
## =============================================================================

wamp.tcp.acceptors_pool_size = 100
wamp.tcp.backlog = 1024
wamp.tcp.enabled = on
wamp.tcp.keepalive = on
wamp.tcp.max_connections = 10000
wamp.tcp.nodelay = on
wamp.tcp.port = 18082
wamp.tls.enabled = off
wamp.tls.acceptors_pool_size = 100
wamp.tls.backlog = 1024
wamp.tls.cacertfile = $(platform_etc_dir)/cacert.pem
wamp.tls.certfile = $(platform_etc_dir)/cert.pem
wamp.tls.keyfile = $(platform_etc_dir)/key.pem
wamp.tls.keepalive = on
wamp.tls.max_connections = 10000
wamp.tls.nodelay = on
wamp.tls.port = 18085
wamp.websocket.ping.enabled = on
wamp.websocket.ping.interval = 30s
wamp.websocket.ping.max_attempts = 3
wamp.websocket.idle_timeout = 8h
wamp.max_call_timeout = 2h

## =============================================================================
## BROKER BRIDGE
## =============================================================================

broker_bridge.config_file = $(platform_etc_dir)/broker_bridge_config.json

## Kafka
broker_bridge.kafka.enabled = off
# broker_bridge.kafka.clients.default.allow_topic_auto_creation = on
# broker_bridge.kafka.clients.default.auto_start_producers = on
# broker_bridge.kafka.clients.default.endpoints = [{"127.0.0.1", 9092}]
# broker_bridge.kafka.clients.default.max_metadata_sock_retry = 5
# broker_bridge.kafka.clients.default.producer.partition_restart_delay_seconds = 2s
# broker_bridge.kafka.clients.default.producer.required_acks = 1
# broker_bridge.kafka.clients.default.producer.topic_restart_delay_seconds = 10s
# broker_bridge.kafka.clients.default.reconnect_cool_down_seconds = 10s
# broker_bridge.kafka.clients.default.restart_delay_seconds = 10s
# broker_bridge.kafka.topics.wamp_events = com.leapsight.wamp.events

## Notification - AWS
broker_bridge.aws.region = $(AWS_REGION)
broker_bridge.aws.access_key_id = $(AWS_ACCESS_KEY_ID)
broker_bridge.aws.secret_access_key = $(AWS_SECRET_ACCESS_KEY)

## Notification - Amazon SNS
broker_bridge.aws.sns.enabled = on
broker_bridge.aws.sns_host = $(AWS_SNS_HOST)
## Notification - Amazon SES
# broker_bridge.aws.ses.enabled = off

## TODO: I can't have both!!!
## Notification - Mailgun
broker_bridge.mailgun.enabled = off
# broker_bridge.mailgun.adapter = mailgun2
# broker_bridge.mailgun.apiurl = https://api.mailgun.net/v3
# broker_bridge.mailgun.domain = $(MAILGUN_DOMAIN)
# broker_bridge.mailgun.apikey = $(MAILGUN_APIKEY)
# broker_bridge.mailgun.sender = $(MAILGUN_SENDER)

## Notification - Sendgrid
broker_bridge.sendgrid.enabled = on
broker_bridge.sendgrid.adapter = sendgrid
broker_bridge.sendgrid.apiurl = https://api.sendgrid.com/v3
broker_bridge.sendgrid.apikey = $(SENDGRID_APIKEY)
broker_bridge.sendgrid.sender = $(SENDGRID_SENDER)


## =============================================================================
## CLUSTER
## =============================================================================

cluster.parallelism = 2
cluster.peer_port = 18086
cluster.peer_discovery.enabled = off
cluster.peer_discovery.automatic_join = off
cluster.peer_discovery.polling_interval = 10s
cluster.peer_discovery.timeout = 5s
cluster.peer_discovery.type = bondy_peer_discovery_dns_agent
cluster.peer_discovery.config.service_name = bondy.local
cluster.tls.enabled = off

## =============================================================================
## AAE
## =============================================================================

aae.data_exchange_timeout = 1m
aae.enabled = off
aae.exchange_timer = 1m
aae.hashtree_timer = 10s
aae.hashtree_ttl = 1w

## =============================================================================
## COORDINATED STATUP
## =============================================================================

startup.wait_for_store_partitions = off
startup.wait_for_store_hashtrees = off
startup.wait_for_store_aae_exchange = off
shutdown_grace_period = 15s

## =============================================================================
## DIRECTORIES
## =============================================================================

platform_data_dir = ./data
platform_etc_dir = ./etc
platform_log_dir = ./log
platform_tmp_dir = ./tmp

## =============================================================================
## STORAGE
## =============================================================================

store.partitions = 16
store.shard_by = prefix

## =============================================================================
## LOGGING
## =============================================================================


## =============================================================================
## ERLANG
## =============================================================================

erlang.time_correction = on
erlang.time_correction.warp_mode = multi_time_warp
erlang.process_limit = 2000000
erlang.kernel_polling = on
erlang.async_threads = 16
erlang.max_ports = 65536
erlang.distribution_buffer_size = 32MB
erlang.dirty_io_schedulers.number = 160
## The following is required when running in Docker / K8s
## Refer to https://adoptingerlang.org/docs/production/kubernetes/
##erlang.sbwt = none
##erlang.schedulers.total = ${BONDY_ERL_SCHEDULERS}